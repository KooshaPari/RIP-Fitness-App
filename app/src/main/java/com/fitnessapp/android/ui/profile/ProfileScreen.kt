package com.fitnessapp.android.ui.profile

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp

/**
 * Main profile screen displaying user information and settings
 * 
 * Features:
 * - User profile information and avatar
 * - Fitness goals and progress tracking
 * - App preferences and settings
 * - Coaching and personalization options
 * - Account management and subscription info
 * 
 * Provides access to all user customization and account features
 * Supports goal setting, preference management, and coaching setup
 */

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun ProfileScreen(
    onNavigateToGoals: () -> Unit,
    onNavigateToPreferences: () -> Unit,
    onNavigateToCoaching: () -> Unit,
    modifier: Modifier = Modifier
) {
    // Mock user data - will be replaced with actual data from ViewModel
    val userName = \"Alex Johnson\"\n    val userEmail = \"alex.johnson@email.com\"\n    val memberSince = \"Member since Jan 2024\"\n    val currentStreak = 12\n    val totalWorkouts = 156\n    val goalsAchieved = 8\n    \n    LazyColumn(\n        modifier = modifier\n            .fillMaxSize()\n            .padding(16.dp),\n        verticalArrangement = Arrangement.spacedBy(16.dp)\n    ) {\n        // Profile header\n        item {\n            Card(\n                modifier = Modifier.fillMaxWidth()\n            ) {\n                Column(\n                    modifier = Modifier.padding(20.dp),\n                    horizontalAlignment = Alignment.CenterHorizontally\n                ) {\n                    // Profile avatar placeholder\n                    Box(\n                        modifier = Modifier\n                            .size(80.dp)\n                            .clip(CircleShape),\n                        contentAlignment = Alignment.Center\n                    ) {\n                        Icon(\n                            imageVector = Icons.Default.Person,\n                            contentDescription = \"Profile picture\",\n                            modifier = Modifier.size(60.dp),\n                            tint = MaterialTheme.colorScheme.onSurfaceVariant\n                        )\n                    }\n                    \n                    Spacer(modifier = Modifier.height(12.dp))\n                    \n                    Text(\n                        text = userName,\n                        style = MaterialTheme.typography.headlineSmall,\n                        fontWeight = FontWeight.Bold\n                    )\n                    \n                    Text(\n                        text = userEmail,\n                        style = MaterialTheme.typography.bodyMedium,\n                        color = MaterialTheme.colorScheme.onSurfaceVariant\n                    )\n                    \n                    Text(\n                        text = memberSince,\n                        style = MaterialTheme.typography.bodySmall,\n                        color = MaterialTheme.colorScheme.onSurfaceVariant\n                    )\n                    \n                    Spacer(modifier = Modifier.height(16.dp))\n                    \n                    // Stats row\n                    Row(\n                        modifier = Modifier.fillMaxWidth(),\n                        horizontalArrangement = Arrangement.SpaceEvenly\n                    ) {\n                        Column(\n                            horizontalAlignment = Alignment.CenterHorizontally\n                        ) {\n                            Text(\n                                text = \"$currentStreak\",\n                                style = MaterialTheme.typography.titleMedium,\n                                fontWeight = FontWeight.Bold,\n                                color = MaterialTheme.colorScheme.primary\n                            )\n                            Text(\n                                text = \"Day Streak\",\n                                style = MaterialTheme.typography.bodySmall,\n                                color = MaterialTheme.colorScheme.onSurfaceVariant\n                            )\n                        }\n                        Column(\n                            horizontalAlignment = Alignment.CenterHorizontally\n                        ) {\n                            Text(\n                                text = \"$totalWorkouts\",\n                                style = MaterialTheme.typography.titleMedium,\n                                fontWeight = FontWeight.Bold,\n                                color = MaterialTheme.colorScheme.secondary\n                            )\n                            Text(\n                                text = \"Workouts\",\n                                style = MaterialTheme.typography.bodySmall,\n                                color = MaterialTheme.colorScheme.onSurfaceVariant\n                            )\n                        )\n                        Column(\n                            horizontalAlignment = Alignment.CenterHorizontally\n                        ) {\n                            Text(\n                                text = \"$goalsAchieved\",\n                                style = MaterialTheme.typography.titleMedium,\n                                fontWeight = FontWeight.Bold,\n                                color = MaterialTheme.colorScheme.tertiary\n                            )\n                            Text(\n                                text = \"Goals Met\",\n                                style = MaterialTheme.typography.bodySmall,\n                                color = MaterialTheme.colorScheme.onSurfaceVariant\n                            )\n                        }\n                    }\n                }\n            }\n        }\n        \n        // Quick actions\n        item {\n            Text(\n                text = \"Personalization\",\n                style = MaterialTheme.typography.titleMedium,\n                fontWeight = FontWeight.SemiBold\n            )\n        }\n\n        // Main menu items\n        items(\n            listOf(\n                MenuItemData(\n                    title = \"Fitness Goals\",\n                    subtitle = \"Set and track your objectives\",\n                    icon = Icons.Default.Flag,\n                    onClick = onNavigateToGoals\n                ),\n                MenuItemData(\n                    title = \"Coaching\",\n                    subtitle = \"Personalized guidance and tips\",\n                    icon = Icons.Default.Psychology,\n                    onClick = onNavigateToCoaching\n                ),\n                MenuItemData(\n                    title = \"Preferences\",\n                    subtitle = \"Customize your app experience\",\n                    icon = Icons.Default.Tune,\n                    onClick = onNavigateToPreferences\n                )\n            )\n        ) { item ->\n            ProfileMenuItem(\n                title = item.title,\n                subtitle = item.subtitle,\n                icon = item.icon,\n                onClick = item.onClick\n            )\n        }\n        \n        // Settings section\n        item {\n            Text(\n                text = \"Settings\",\n                style = MaterialTheme.typography.titleMedium,\n                fontWeight = FontWeight.SemiBold\n            )\n        }\n\n        items(\n            listOf(\n                MenuItemData(\n                    title = \"Notifications\",\n                    subtitle = \"Manage your notification preferences\",\n                    icon = Icons.Default.Notifications,\n                    onClick = { /* Navigate to notifications */ }\n                ),\n                MenuItemData(\n                    title = \"Privacy & Security\",\n                    subtitle = \"Control your data and privacy\",\n                    icon = Icons.Default.Security,\n                    onClick = { /* Navigate to privacy */ }\n                ),\n                MenuItemData(\n                    title = \"Data Export\",\n                    subtitle = \"Download your fitness data\",\n                    icon = Icons.Default.Download,\n                    onClick = { /* Navigate to data export */ }\n                ),\n                MenuItemData(\n                    title = \"Help & Support\",\n                    subtitle = \"Get help and contact support\",\n                    icon = Icons.Default.Help,\n                    onClick = { /* Navigate to help */ }\n                ),\n                MenuItemData(\n                    title = \"About\",\n                    subtitle = \"App version and information\",\n                    icon = Icons.Default.Info,\n                    onClick = { /* Navigate to about */ }\n                )\n            )\n        ) { item ->\n            ProfileMenuItem(\n                title = item.title,\n                subtitle = item.subtitle,\n                icon = item.icon,\n                onClick = item.onClick\n            )\n        }\n        \n        // Sign out button\n        item {\n            OutlinedButton(\n                onClick = { /* Handle sign out */ },\n                modifier = Modifier.fillMaxWidth()\n            ) {\n                Icon(\n                    imageVector = Icons.Default.Logout,\n                    contentDescription = null\n                )\n                Spacer(modifier = Modifier.width(8.dp))\n                Text(\"Sign Out\")\n            }\n        }\n        \n        // Add some bottom padding\n        item {\n            Spacer(modifier = Modifier.height(16.dp))\n        }\n    }\n}\n\n/**\n * Individual menu item in the profile screen\n */\n@Composable\nprivate fun ProfileMenuItem(\n    title: String,\n    subtitle: String,\n    icon: androidx.compose.ui.graphics.vector.ImageVector,\n    onClick: () -> Unit,\n    modifier: Modifier = Modifier\n) {\n    Card(\n        modifier = modifier.fillMaxWidth(),\n        onClick = onClick\n    ) {\n        Row(\n            modifier = Modifier\n                .fillMaxWidth()\n                .padding(16.dp),\n            horizontalArrangement = Arrangement.SpaceBetween,\n            verticalAlignment = Alignment.CenterVertically\n        ) {\n            Row(\n                verticalAlignment = Alignment.CenterVertically\n            ) {\n                Icon(\n                    imageVector = icon,\n                    contentDescription = null,\n                    tint = MaterialTheme.colorScheme.primary\n                )\n                Spacer(modifier = Modifier.width(16.dp))\n                Column {\n                    Text(\n                        text = title,\n                        style = MaterialTheme.typography.bodyMedium,\n                        fontWeight = FontWeight.Medium\n                    )\n                    Text(\n                        text = subtitle,\n                        style = MaterialTheme.typography.bodySmall,\n                        color = MaterialTheme.colorScheme.onSurfaceVariant\n                    )\n                }\n            )\n            Icon(\n                imageVector = Icons.Default.ChevronRight,\n                contentDescription = \"Open\",\n                tint = MaterialTheme.colorScheme.onSurfaceVariant\n            )\n        }\n    }\n}\n\n/**\n * Data class for menu items\n */\nprivate data class MenuItemData(\n    val title: String,\n    val subtitle: String,\n    val icon: androidx.compose.ui.graphics.vector.ImageVector,\n    val onClick: () -> Unit\n)"