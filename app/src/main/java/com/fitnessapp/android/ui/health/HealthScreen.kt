package com.fitnessapp.android.ui.health

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import com.fitnessapp.android.ui.components.HealthMetricCard
import com.fitnessapp.android.ui.components.SyncStatusCard

/**
 * Main health screen displaying health data dashboard
 * 
 * Features:
 * - Real-time health metrics from connected devices/apps
 * - Sync status and settings for health data sources
 * - Permission management for health data access
 * - Integration with Apple Health, Google Fit, Samsung Health
 * - Trends and insights from health data analysis
 * 
 * Manages privacy and permissions for sensitive health information
 * Provides clear data source attribution and sync status
 */

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun HealthScreen(
    onNavigateToHealthData: () -> Unit,
    onNavigateToSyncSettings: () -> Unit,
    onNavigateToPermissions: () -> Unit,
    modifier: Modifier = Modifier
) {
    // Mock health data - will be replaced with actual data from ViewModel
    val heartRate = 72
    val steps = 8432
    val stepsGoal = 10000
    val sleepHours = 7.5
    val activeMinutes = 45
    val caloriesBurned = 420
    
    LazyColumn(
        modifier = modifier
            .fillMaxSize()
            .padding(16.dp),
        verticalArrangement = Arrangement.spacedBy(16.dp)
    ) {
        // Header
        item {
            Row(
                modifier = Modifier.fillMaxWidth(),
                horizontalArrangement = Arrangement.SpaceBetween,
                verticalAlignment = Alignment.CenterVertically
            ) {
                Column {
                    Text(
                        text = \"Health Overview\",\n                        style = MaterialTheme.typography.headlineMedium,\n                        fontWeight = FontWeight.Bold\n                    )\n                    Text(\n                        text = \"Your wellness at a glance\",\n                        style = MaterialTheme.typography.bodyMedium,\n                        color = MaterialTheme.colorScheme.onSurfaceVariant\n                    )\n                }\n                IconButton(\n                    onClick = onNavigateToSyncSettings\n                ) {\n                    Icon(\n                        imageVector = Icons.Default.Sync,\n                        contentDescription = \"Sync settings\"\n                    )\n                }\n            }\n        }\n\n        // Sync status section\n        item {\n            SyncStatusCard(\n                isConnected = true,\n                lastSyncTime = \"2 minutes ago\",\n                connectedSources = listOf(\"Apple Health\", \"Fitbit\"),\n                onSyncClick = onNavigateToSyncSettings\n            )\n        }\n\n        // Key health metrics\n        item {\n            Text(\n                text = \"Today's Metrics\",\n                style = MaterialTheme.typography.titleMedium,\n                fontWeight = FontWeight.SemiBold\n            )\n        }\n\n        // Heart rate and steps row\n        item {\n            Row(\n                modifier = Modifier.fillMaxWidth(),\n                horizontalArrangement = Arrangement.spacedBy(8.dp)\n            ) {\n                HealthMetricCard(\n                    modifier = Modifier.weight(1f),\n                    title = \"Heart Rate\",\n                    value = \"$heartRate\",\n                    unit = \"bpm\",\n                    icon = Icons.Default.Favorite,\n                    trend = \"+2 from yesterday\",\n                    color = MaterialTheme.colorScheme.error\n                )\n                HealthMetricCard(\n                    modifier = Modifier.weight(1f),\n                    title = \"Steps\",\n                    value = \"$steps\",\n                    unit = \"/ $stepsGoal\",\n                    icon = Icons.Default.DirectionsWalk,\n                    progress = steps.toFloat() / stepsGoal.toFloat(),\n                    color = MaterialTheme.colorScheme.primary\n                )\n            }\n        }\n\n        // Sleep and activity row\n        item {\n            Row(\n                modifier = Modifier.fillMaxWidth(),\n                horizontalArrangement = Arrangement.spacedBy(8.dp)\n            ) {\n                HealthMetricCard(\n                    modifier = Modifier.weight(1f),\n                    title = \"Sleep\",\n                    value = \"${sleepHours}\",\n                    unit = \"hours\",\n                    icon = Icons.Default.Bedtime,\n                    trend = \"Great quality\",\n                    color = MaterialTheme.colorScheme.tertiary\n                )\n                HealthMetricCard(\n                    modifier = Modifier.weight(1f),\n                    title = \"Active Minutes\",\n                    value = \"$activeMinutes\",\n                    unit = \"min\",\n                    icon = Icons.Default.DirectionsRun,\n                    trend = \"+5 from yesterday\",\n                    color = MaterialTheme.colorScheme.secondary\n                )\n            }\n        }\n\n        // Weekly summary\n        item {\n            Card(\n                modifier = Modifier.fillMaxWidth()\n            ) {\n                Column(\n                    modifier = Modifier.padding(16.dp)\n                ) {\n                    Text(\n                        text = \"Weekly Summary\",\n                        style = MaterialTheme.typography.titleMedium,\n                        fontWeight = FontWeight.SemiBold\n                    )\n                    Spacer(modifier = Modifier.height(12.dp))\n                    \n                    // Weekly stats\n                    Row(\n                        modifier = Modifier.fillMaxWidth(),\n                        horizontalArrangement = Arrangement.SpaceBetween\n                    ) {\n                        Column {\n                            Text(\n                                text = \"65,432\",\n                                style = MaterialTheme.typography.titleLarge,\n                                fontWeight = FontWeight.Bold,\n                                color = MaterialTheme.colorScheme.primary\n                            )\n                            Text(\n                                text = \"Total Steps\",\n                                style = MaterialTheme.typography.bodyMedium,\n                                color = MaterialTheme.colorScheme.onSurfaceVariant\n                            )\n                        }\n                        Column {\n                            Text(\n                                text = \"52.5\",\n                                style = MaterialTheme.typography.titleLarge,\n                                fontWeight = FontWeight.Bold,\n                                color = MaterialTheme.colorScheme.secondary\n                            )\n                            Text(\n                                text = \"Hours Sleep\",\n                                style = MaterialTheme.typography.bodyMedium,\n                                color = MaterialTheme.colorScheme.onSurfaceVariant\n                            )\n                        }\n                        Column {\n                            Text(\n                                text = \"74\",\n                                style = MaterialTheme.typography.titleLarge,\n                                fontWeight = FontWeight.Bold,\n                                color = MaterialTheme.colorScheme.error\n                            )\n                            Text(\n                                text = \"Avg HR\",\n                                style = MaterialTheme.typography.bodyMedium,\n                                color = MaterialTheme.colorScheme.onSurfaceVariant\n                            )\n                        }\n                    }\n                }\n            }\n        }\n\n        // Data sources and permissions\n        item {\n            Text(\n                text = \"Data Sources\",\n                style = MaterialTheme.typography.titleMedium,\n                fontWeight = FontWeight.SemiBold\n            )\n        }\n\n        items(\n            listOf(\n                \"Apple Health\" to true,\n                \"Fitbit\" to true,\n                \"Google Fit\" to false,\n                \"Samsung Health\" to false\n            )\n        ) { (source, isConnected) ->\n            Card(\n                modifier = Modifier.fillMaxWidth(),\n                onClick = onNavigateToSyncSettings\n            ) {\n                Row(\n                    modifier = Modifier\n                        .fillMaxWidth()\n                        .padding(16.dp),\n                    horizontalArrangement = Arrangement.SpaceBetween,\n                    verticalAlignment = Alignment.CenterVertically\n                ) {\n                    Row(\n                        verticalAlignment = Alignment.CenterVertically\n                    ) {\n                        Icon(\n                            imageVector = if (isConnected) Icons.Default.CheckCircle else Icons.Default.Circle,\n                            contentDescription = if (isConnected) \"Connected\" else \"Disconnected\",\n                            tint = if (isConnected) MaterialTheme.colorScheme.primary else MaterialTheme.colorScheme.outline\n                        )\n                        Spacer(modifier = Modifier.width(12.dp))\n                        Column {\n                            Text(\n                                text = source,\n                                style = MaterialTheme.typography.bodyMedium,\n                                fontWeight = FontWeight.Medium\n                            )\n                            Text(\n                                text = if (isConnected) \"Connected\" else \"Not connected\",\n                                style = MaterialTheme.typography.bodySmall,\n                                color = MaterialTheme.colorScheme.onSurfaceVariant\n                            )\n                        }\n                    }\n                    Icon(\n                        imageVector = Icons.Default.ChevronRight,\n                        contentDescription = \"Configure\",\n                        tint = MaterialTheme.colorScheme.onSurfaceVariant\n                    )\n                }\n            }\n        }\n\n        // Privacy and permissions\n        item {\n            Card(\n                modifier = Modifier.fillMaxWidth(),\n                onClick = onNavigateToPermissions\n            ) {\n                Row(\n                    modifier = Modifier\n                        .fillMaxWidth()\n                        .padding(16.dp),\n                    horizontalArrangement = Arrangement.SpaceBetween,\n                    verticalAlignment = Alignment.CenterVertically\n                ) {\n                    Row(\n                        verticalAlignment = Alignment.CenterVertically\n                    ) {\n                        Icon(\n                            imageVector = Icons.Default.Security,\n                            contentDescription = \"Privacy\",\n                            tint = MaterialTheme.colorScheme.primary\n                        )\n                        Spacer(modifier = Modifier.width(12.dp))\n                        Column {\n                            Text(\n                                text = \"Privacy & Permissions\",\n                                style = MaterialTheme.typography.bodyMedium,\n                                fontWeight = FontWeight.Medium\n                            )\n                            Text(\n                                text = \"Manage your health data privacy\",\n                                style = MaterialTheme.typography.bodySmall,\n                                color = MaterialTheme.colorScheme.onSurfaceVariant\n                            )\n                        }\n                    )\n                    Icon(\n                        imageVector = Icons.Default.ChevronRight,\n                        contentDescription = \"Open\",\n                        tint = MaterialTheme.colorScheme.onSurfaceVariant\n                    )\n                }\n            }\n        }\n\n        // Add some bottom padding\n        item {\n            Spacer(modifier = Modifier.height(16.dp))\n        }\n    }\n}"